Description: No blocking on mouse device under X

--- a/src/daemon/old_main.c	2008-11-11 22:06:41.000000000 +0100
+++ b/src/daemon/old_main.c	2008-11-11 22:06:25.000000000 +0100
@@ -130,10 +130,8 @@
          FD_SET(mouse_table[eventFlag].fd,&selSet);
       }
       else
-         while((pending=select(maxfd+1,&selSet,NULL_SET,NULL_SET,&timeout))==0){
-            selSet=readySet;
+         if((pending=select(maxfd+1,&selSet,NULL_SET,NULL_SET,&timeout))==0)
             resetTimeout();
-         } /* go on */
 
       if(opt_resize) { /* did the console resize? */
          get_console_size(&event);
@@ -168,12 +166,24 @@
       if (ioctl(fd, KDGETMODE, &kd_mode) < 0)
          gpm_report(GPM_PR_OOPS,GPM_MESS_IOCTL_KDGETMODE);
       close(fd);
-      if(kd_mode != KD_TEXT && !option.repeater && !option.force_repeat) {
-         wait_text(&mouse_table[1].fd);
-         maxfd=max(maxfd,mouse_table[1].fd);
-         readySet=connSet;
-         FD_SET(mouse_table[1].fd,&readySet);
-         continue; /* reselect */
+      if (!option.repeater && !option.force_repeat) {
+         if (mouse_table[1].fd >= 0 && kd_mode != KD_TEXT) {
+            /* Non-text mode, close mouse */
+            close(mouse_table[1].fd);
+            FD_CLR(mouse_table[1].fd,&readySet);
+            mouse_table[1].fd=-1;
+         } else if (mouse_table[1].fd < 0 && kd_mode == KD_TEXT) {
+            /* Back to text mode, reopen mouse */
+            if ((mouse_table[1].fd=open((mouse_table[1].opt_dev),O_RDWR))<0)
+               gpm_report(GPM_PR_OOPS,GPM_MESS_OPEN,(mouse_table[1].opt_dev));
+            else {
+               if ((mouse_table[1].m_type)->init)
+                  (mouse_table[1].m_type)=((mouse_table[1].m_type)->init)(mouse_table[1].fd, (mouse_table[1].m_type)->flags, (mouse_table[1].m_type), mouse_argc[1],
+                          mouse_argv[1]);
+               maxfd=max(maxfd,mouse_table[1].fd);
+               FD_SET(mouse_table[1].fd,&readySet);
+            }
+         }
       }
       }
 
@@ -185,7 +195,7 @@
 
       for (i=1; i <= 1+opt_double; i++) {
          which_mouse=mouse_table+i; /* used to access options */
-         if (FD_ISSET(which_mouse->fd,&selSet)) {
+         if (which_mouse->fd >= 0 && FD_ISSET(which_mouse->fd,&selSet)) {
             FD_CLR(which_mouse->fd,&selSet); pending--;
             if (processMouse(which_mouse->fd, &event, (which_mouse->m_type), kd_mode))
                /* pass it to the client, if any
--- a/src/headers/gpmInt.h	2008-11-11 22:01:25.000000000 +0100
+++ b/src/headers/gpmInt.h	2008-11-11 22:01:32.000000000 +0100
@@ -33,7 +33,7 @@
 
 /*....................................... old gpmCfg.h */
 /* timeout for the select() syscall */
-#define SELECT_TIME 86400 /* one day */
+#define SELECT_TIME 2 /* two seconds */
 
 #ifdef HAVE_LINUX_TTY_H
 #include <linux/tty.h>
